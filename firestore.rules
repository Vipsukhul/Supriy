/**
 * @fileoverview Firestore Security Rules for DebtFlow application.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model for user profiles,
 * public read access to customer records, and open access to financial records.
 *
 * Data Structure:
 * - /users/{userId}: Stores individual user profiles. Access is restricted to the owning user.
 * - /customers/{customerId}: Stores customer information. Publicly readable.
 * - /financialRecords/{recordId}: Stores financial records. Publicly readable.
 *
 * Key Security Decisions:
 * - Users can only read/write their own profile data.
 * - Customer data is considered public and is readable by anyone.
 * - Financial records are considered public and are readable by anyone.
 * - Data validation is relaxed in this prototyping phase except for user ID matching.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile data.
     * @path /users/{userId}
     * @allow (create) - User with UID 'user_abc' can create their profile at /users/user_abc.
     * @allow (get, update, delete) - User with UID 'user_abc' can read/write their profile at /users/user_abc.
     * @deny (create) - User with UID 'user_xyz' cannot create a profile at /users/user_abc.
     * @deny (get, update, delete) - User with UID 'user_xyz' cannot read/write the profile at /users/user_abc.
     * @principle Enforces user-ownership; users can only manage their own data.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      allow get: if isOwner(userId);
      allow list: if false;

      allow create: if isOwner(userId) && request.resource.data.id == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Controls access to customer data. Customer data is publicly readable.
     * @path /customers/{customerId}
     * @allow (get, list) - Any user can read customer data.
     * @deny (create, update, delete) - No user can create, update, or delete customer data.
     * @principle Allows public read access to customer records.
     */
    match /customers/{customerId} {
      allow get, list: if true;

      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to financial records. Financial records are publicly readable.
     * @path /financialRecords/{recordId}
     * @allow (get, list) - Any user can read financial records.
     * @deny (create, update, delete) - No user can create, update, or delete financial records.
     * @principle Allows public read access to financial records.
     */
    match /financialRecords/{recordId} {
      allow get, list: if true;

      allow create, update, delete: if false;
    }
  }
}